@using RenewUp.Rpg.Serviço.Blazor.Componentes.Carregamento
@using System.Threading

<IndicadorDeCarregamento @ref="@indicadorDeCarregamento" AoAtualizarValorDeProcessando="@AoAtualizarValorDeProcessando">
    <button @onclick="@AoClicarInterno" hidden="@Desabilitado">@ChildContent</button>
</IndicadorDeCarregamento>

@code {
    private IndicadorDeCarregamento indicadorDeCarregamento;

    [Parameter]
    public Action AoClicar { get; set; }
    [Parameter]
    public Func<CancellationToken, Task> TarefaDeAoClicar { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool Desabilitado { get; set; }
    [Parameter]
    public EventCallback<bool> AoAtualizarValorDeDesabilitado { get; set; }

    public async void AtualizarValorDeDesabilitado(bool valor)
    {
        var valorAnterior = Desabilitado;
        Desabilitado = valor;
        if (valorAnterior != Desabilitado)
        {
            StateHasChanged();
            await AoAtualizarValorDeDesabilitado.InvokeAsync(valor);
        }
    }

    private async void AoClicarInterno()
    {
        if (AoClicar is not null)
            await indicadorDeCarregamento.Executar(_ =>
            {
                AoClicar();
                return Task.CompletedTask;
            });
        if (TarefaDeAoClicar is not null)
            await indicadorDeCarregamento.Executar(TarefaDeAoClicar);
    }

    private void AoAtualizarValorDeProcessando(bool valor) => AtualizarValorDeDesabilitado(valor);
}